#!/usr/bin/perl

#-------------------------------------------------------------------------------
#                                                                               
#   Name:       make.qt.config                                                  
#                                                                               
#   Purpose:    Make the configuration file for creating Qt Makefiles.          
#               This procedure should be run after you create a new main        
#               program.                                                        
#                                                                               
#   @version    2016-04-04  DHF     File creation.                              
#                                                                               
#-------------------------------------------------------------------------------

my @cxx_flags;
my @directories;
my @inc_path;
my @library;
my @macros;
my @targetdeps;
my @qt;

my %config;

my $version = "V 1.0.0 ";   # $version is same length as the value held.        
my @date = localtime;
my $date_time = sprintf("%04d-%02d-%02d", $date[5]+1900, $date[4]+1, $date[3]);
my $qmake = "qmake-qt4";


my $qrc_file = "../common/qt.qrc";

for my $a (@ARGV)
{
    if ($a =~ /^-c(.*)/) {
        $config{$1} = 1;

    } elsif ($a =~ /^-d(.*)/) {
        push @directories, $1;

    } elsif ($a =~ /^-D(.*)/) {
        push(@macros, $1);

    } elsif ($a =~ /^-f(.*)/) {
        push(@cxx_flags, $1);
        
    } elsif ($a =~ /^-I(.*)/) {
        push(@inc_path, $1);

    } elsif ($a =~ /^-l(.*)/) {
        push(@library, $1);

    } elsif ($a =~ /^-L/) {
        push(@library, $a);

    } elsif ($a =~ /^--qmake=(.*)/) {
        $qmake = $1;

    } elsif ($a =~ /^-qt(.*)/) {
        push @qt, $1;
        
    } elsif ($a =~ /^-q(.*)/) {
        $qrc_file = $1;

    } elsif ($a =~ /^-TD(.*)/) {
        push(@targetdeps, $1);

    }
}

if ($#directories == 0) {
    push(@directories, "../common");
}

open (OUTPUT, ">configure.sh") or die "Unable to open configure.sh\n$!\n";

print OUTPUT <<EOF;
#!/bin/bash

#-------------------------------------------------------------------------------
#   Name:           configuration.sh                                            
#                                                                               
#   Purpose:        Create the .pro and Makefile files for the known main       
#                   programs.                                                   
#                                                                               
#   Note:           This file is automatically generated by the make.qt.config  
#                   tool.  You should not modify this file by hand.             
#                                                                               
#   make.qt.config                                                              
EOF
    for my $a (@ARGV) {
        printf OUTPUT "#%7s%-72s\n", " ", $a;
    }

print OUTPUT <<EOF;
#                                                                               
#   Version:                                                                    
#       $date_time    MQC       Generated by make.qt.config $version            
#                                                                               
#-------------------------------------------------------------------------------

EOF

open (BUILD, ">build") or die "Unable to open build\n$!\n";
print BUILD <<EOF;
#!/bin/bash

#-------------------------------------------------------------------------------
#   Name:           build                                                       
#                                                                               
#   Purpose:        Call each of the Makefiles generated by the latest          
#                   execution of ./makeconfig and ./configure.sh.               
#                                                                               
#   Note:           This file is automatically generated by the make.qt.config  
#                   tool.  You should [probably] not modify this file by hand.  
#                                                                               
#   Version:                                                                    
#       $date_time    MQC       Generated by make.qt.config $version            
#                                                                               
#-------------------------------------------------------------------------------

EOF

&print_build("clear && clear ");

foreach my $dir (@directories)
{
    &process_dir($dir);
}

print BUILD "\n";

close OUTPUT;
close BUILD;



sub process_dir
{
    my ($dir) = @_;

    opendir (DIR, $dir) or die "Unable to open directory ${dir}\n$!\n";
    my $file;

    while (defined($file = readdir(DIR))) {
        my $path = $dir . "/" . $file;

        my $line;
        my $main = 0;

        open (INPUT, $path) or die "Unable to open ${path}\n$!\n";

        while (defined($line = <INPUT>) and $main == 0) {
            if ($line =~ /int\s+main\s*\(/) {
                $main = 1;
            }
        }
        close INPUT;

        if ($main == 1 and $file =~ /(.*)\.cpp$/) {
            print "main program: ${file}\n";

            my $root = $1;

            &print_cont("../tools/makepro");
            &print_cont("    -m${path}");

            foreach my $i (@config)      { &print_cont ("    -c${i}"); }
            foreach my $i (@directories) { &print_cont ("    -d${i}"); }
            foreach my $i (@inc_path)    { &print_cont ("    -I${i}"); }
            foreach my $i (@library)     { &print_cont ("    -l${i}"); }
            foreach my $i (@macro)       { &print_cont ("    -D${i}"); }
            foreach my $i (@cxx_flags)   { &print_cont ("    -f${i}"); }
            foreach my $i (@qt)          { &print_cont ("    -qt${i}");}

            &print_cont ("    -q${qrc_file}");

            print OUTPUT "    >${root}.pro\n\n\n";
            print OUTPUT "${qmake} -o Makefile-${root} ${root}.pro\n\n";

            &print_build("&& \\\n make -j8 -f Makefile-${root}");

        }
    }
}


sub print_cont
{
    my ($line) = @_;
    printf OUTPUT ("%-76s\\\n", $line);
}

sub print_build
{
    my ($line) = @_;
    printf BUILD ("%-76s", $line);
}

