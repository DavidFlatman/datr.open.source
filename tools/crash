#!/usr/bin/perl -w

#-------------------------------------------------------------------------------
#   File:   crash                                                               
#                                                                               
#   Classification: UNCLASSIFIED, OPEN SOURCE                                   
#                                                                               
#   Brief:  Process a crash-stack.txt file                                      
#                                                                               
#           The common/dev_debug.cpp code will create a crash-stack.txt file    
#           that effectively has the callback information if the image was      
#           and routines were compiled and linked with debug information.       
#                                                                               
#           This script will display that file in a human readable format.      
#                                                                               
#   2020-05-04  DHF     Made open source.                                       
#-------------------------------------------------------------------------------

if ($#ARGV < 0) {
    &process("crash-stack.txt");
} else {
    foreach my $a (@ARGV) {
        &process($a);
    }
}


#-------------------------------------------------------------------------------
#-------------------------------------------------------------------------------
sub process
{
    my ($file) = @_;
    my $line;
    my $image = "./a.out";

    open(INPUT, $file) or die "unable to open ${file}\n$1\n";

    while (defined($line = <INPUT>)) {
        chomp($line);
        if ($line =~ /^image: (.*)/) {
            printf "\n" . $line . "\n\n";
            $image = $1;

        } elsif ($line =~ /^error: (.*)/) {
            printf $line . "\n\n";

        } elsif ($line =~ /\[(.*)\]/) {
            my $address = $1;
            open(ADDR, "addr2line -e ${image} ${address}|");
            printf "%-60s %s", $line, <ADDR>;
            close(ADDR);

        }
    }

}

